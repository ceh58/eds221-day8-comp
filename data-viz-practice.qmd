---
title: "Data Visualization"
author: "Carmen"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Install/load packages. 

```{r}
#general use packages
library(tidyverse)
library(here)
library(janitor)

install.packages("ggrepel")
install.packages("gghighlight")
#install.packages("paleteer")
install.packages("ggExtra")
install.packages("ggbeeswarm")

#specifically for plots
library(patchwork)
library(ggrepel)
library(gghighlight)
#library(paleteer)
library(ggExtra)
library(ggbeeswarm)

install.packages("gapminder")
library(gapminder)

install.packages("sf")
library(sf)
```

## Play with graph types. 

```{r}
lizards <- read_csv(here("data_tidy", "lizards.csv"))

ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point()+
  geom_line()

#alternatively (but doesn't easily layer)
ggplot(data = lizards) +
  geom_point(aes(x = total_length, y = weight))

#or (also doesn't easily layer, more complicated individual layers)
ggplot() +
  geom_point(data = lizards, aes(x = total_length, y = weight))

#histogram
ggplot(data = lizards, aes(x = total_length))+
  geom_histogram()

#good for one continuous and one categorical variable
ggplot(data = lizards, aes(y = common_name, x = weight)) +
  geom_jitter()
```

```{r}
ggplot(data = lizards, aes(x = weight)) +
  geom_histogram(color = "orange",
                 fill = "purple",
                 linewidth = 2,
                 linetype = "dotted")
```

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point(color = "#ACF39D",
             fill = "#AF3E4D",
             shape = 22,
             size = 10, 
             alpha = 0.5) #transparency
```

## Updating aes based on variable.

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = common_name,
                 size = total_length),
             alpha = 1)+
  scale_color_discrete(type = c("#9CFFFA", "#AF3E4D", "#9CFFFA", "#9CFFFA", "#9CFFFA", "#9CFFFA", "#9CFFFA"))
  #scale_color_brewer(palette = "Set3")
```

```{r}
ggplot(data = lizards, aes(x = site, y = weight)) +
  geom_jitter(aes(color = common_name)) +
  theme_light()
```

## Axis labels

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point() +
  labs(x = "Total Length (mm)",
       y = "Weight (g)", 
       title = "Lizard Size")
```

## Facets

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point() +
  facet_wrap(~common_name, ncol = 3, scales = "free") + #without scales free, data plotted on the same axes
  labs( x = "Total Length (mm)",
        y = "Weight (g)")
```

```{r}
ggplot(lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = sex, shape = tail)) +
  facet_grid(sex ~ tail)
```

## Reorder

```{r}
lizards_counts <- lizards %>%
  count(common_name)

#plots in reverse alphabetical order
ggplot(lizards_counts, aes(y = fct_reorder(common_name, n), x = n)) +
  geom_col(aes(fill = common_name), show.legend = FALSE)
```

## GGPlot essentials:

```{r}
ggplot(data = lizards, aes(x = total_length, y = weight)) +
  geom_point(aes(color = common_name),
             size = 2) +
  theme_minimal() +
  labs(x = "Total Length (mm)",
       y = "Weight (g)",
       title = "Lizard Size",
       color = "Lizard Species") +
  facet_wrap(~common_name, scales = "free")
  
```

```{r}
ggplot(data = lizards, aes(y = fct_infreq(common_name))) +
  geom_bar(aes(fill = site)) +
  theme_minimal() +
  labs(x = "Lizard Counts",
       y = "Species (Common Name)") +
  facet_grid(sex~tail)
```


